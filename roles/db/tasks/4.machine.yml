---
# ----------------------------------------------------------------------------
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
# ----------------------------------------------------------------------------
#
#  ------------------------- Created by -------------------------------------- 
#
#  Name: Gabriel Popa
#  Company: Iello-Dev srl
#  Country: Romania 
#  Email: contact@iello.ro
#
#
# ----------------------------------------------------------------------------
#
- name: Verify machine hostname to be correctly set
  hostname: name={{ inventory_hostname }}

- lineinfile: dest=/etc/hosts regexp='.*{{ inventory_hostname }}$' insertafter="^127\.0\.0\.1(.*)localhost" line="{{ ansible_eth0['ipv4']['address'] }} {{ inventory_hostname }}" state=present

- name: Restart server
  shell: reboot
  when: restart

- name: Wait for server to come up
  local_action: wait_for host={% if ansible_ssh_host is defined %}{{ ansible_ssh_host }}{% else %}{{ inventory_hostname }}{% endif %} port=22 delay=30
  sudo: false
  when: restart

- name: Activate init script and start mysql server
  service: name=mysql enabled=yes state=started
  when: instance == 1

- name: Activate init script and start mysql server
  service: name=mysql enabled=yes state=started
  when: instance == 2

- name: Create a new database for user store
  mysql_db: name={{ DB4IS }} login_user=root login_password={{ MySQLRootPassword }} state=present
  when: instance == 1

- name: Create a new database for registry
  mysql_db: name={{ DB4GREG }} login_user=root login_password={{ MySQLRootPassword }} state=present
  when: instance == 1

- name: Set user store db user privileges
  mysql_user: login_user=root login_password={{ MySQLRootPassword }} user={{ DB4ISUser }} host="%" password={{ DB4ISPassword }} state=present priv={{ us_mysql_privileges|join('/') }}
  when: instance == 1

- name: Set registry user privileges
  mysql_user: login_user=root login_password={{ MySQLRootPassword }} user={{ DB4GREGUser }} host="%" password={{ DB4GREGPassword }} state=present priv={{ greg_mysql_privileges|join('/') }}
  when: instance == 1

- name: Reload privilege tables
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - FLUSH PRIVILEGES
  changed_when: False
#
#
# EOF: profitbricks-esb-dev/roles/maria/tasks/4.machine.yml